#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        macro_paren: macro_paren {
            compatible = "zmk,behavior-macro";
            label = "PAR()";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
        };

        macro_brack: macro_brack {
            compatible = "zmk,behavior-macro";
            label = "BRK[]";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
        };

        macro_brace: macro_brace {
            compatible = "zmk,behavior-macro";
            label = "BRC{}";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
        };

        macro_backtickpair: macro_backtickpair {
            compatible = "zmk,behavior-macro";
            label = "BT``";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp LEFT>;
        };

        macro_dollar_brace: macro_dollar_brace {
            compatible = "zmk,behavior-macro";
            label = "${}";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR &kp LBRC &kp RBRC &kp LEFT>;
        };

        macro_arrow_fn: macro_arrow_fn {
            compatible = "zmk,behavior-macro";
            label = "=>";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp EQUAL &kp RARROW &kp SPACE>;
        };

        macro_php_ptr: macro_php_ptr {
            compatible = "zmk,behavior-macro";
            label = "->";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp RARROW>;
        };

        macro_php_scope: macro_php_scope {
            compatible = "zmk,behavior-macro";
            label = "::";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
        };

        macro_log: macro_log {
            compatible = "zmk,behavior-macro";
            label = "console.log()";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp N &kp S &kp O &kp L &kp E &kp DOT &kp L &kp O &kp G &kp LPAR &kp RPAR &kp SEMI>;
        };

        macro_php_tags: macro_php_tags {
            compatible = "zmk,behavior-macro";
            label = "<?php ?>";
            #binding-cells = <0>;
            bindings = <&kp LT &kp QMARK &kp P &kp H &kp P &kp ENTER &kp ENTER &kp QMARK &kp GT>;
        };

        macro_echo: macro_echo {
            compatible = "zmk,behavior-macro";
            label = "echo ''";
            #binding-cells = <0>;
            bindings = <&kp E &kp C &kp H &kp O &kp SPACE &kp SQT &kp SQT &kp SEMI &kp LEFT>;
        };

        macro_double_eq: macro_double_eq {
            compatible = "zmk,behavior-macro";
            label = "==";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL>;
        };

        macro_triple_eq: macro_triple_eq {
            compatible = "zmk,behavior-macro";
            label = "===";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL &kp EQUAL>;
        };

        macro_not_eq_strict: macro_not_eq_strict {
            compatible = "zmk,behavior-macro";
            label = "!==";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL &kp EQUAL>;
        };

        td_eq: td_eq {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings =
                <&kp EQUAL>,
                <&macro_double_eq>,
                <&macro_triple_eq>,
                <&macro_not_eq_strict>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "QWERTY";
            bindings = <
&none  &kp Q           &kp W           &kp E               &kp R             &kp T                             &kp UP                &kp Y            &kp U              &kp I                &kp O    &kp P     &none
&none  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H            &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &kp L    &kp SEMI  &none
&none  &kp Z           &kp X           &kp C               &kp V             &kp B      &kp SPACE              &kp DOWN              &kp N            &kp M              &kp COMMA            &kp DOT  &kp FSLH  &none
                                       &kp ESC             &lt 0 SPACE       &lt 1 TAB                                               &lt 2 BACKSPACE  &lt 3 ENTER        &lt 4 DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        sym_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp GRAVE  &kp AT                &kp HASH               &kp DLLR          &kp PRCNT                                &trans             &kp AMPERSAND  &kp ASTERISK      &kp UNDERSCORE  &kp PLUS            &kp PIPE       &none
&trans  &kp TILDE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET                &trans  &mkp LCLK  &trans  &kp LESS_THAN  &kp GREATER_THAN  &kp APOSTROPHE  &kp LS(APOSTROPHE)  &kp COLON      &none
&trans  &kp CARET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp BACKSLASH     &kp SLASH          &kp C_MUTE            &trans             &kp EQUAL      &kp MINUS         &kp LBRC        &kp RBRC            &kp SEMICOLON  &none
                                         &trans                 &trans            &none                                                       &trans         &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        num_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1        &kp N2     &kp N3    &kp N4     &kp N5                            &trans             &kp HOME        &kp PAGE_UP      &kp PAGE_DOWN         &kp END                &kp PRINTSCREEN  &none
&trans  &kp NUMBER_6  &kp N7     &kp N8    &kp N9     &kp N0                    &trans  &mkp LCLK  &trans  &kp LEFT        &kp DOWN         &kp UP                &kp RIGHT              &kp INS          &none
&trans  &kp ASTERISK  &kp SLASH  &kp PLUS  &kp MINUS  &kp PERIOD  &kp C_MUTE            &trans             &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH    &none
                                 &trans    &trans     &trans                                               &trans          &none            &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        coding_macros {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };

        fn_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
